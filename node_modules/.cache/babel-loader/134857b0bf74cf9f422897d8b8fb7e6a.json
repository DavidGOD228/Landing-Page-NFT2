{"ast":null,"code":"import _slicedToArray from\"/srv/crypto/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from'react';import{CardItem,InfoMorphMobile,AttrsDetails,BlockInfoTitle}from'components';import{useWindowSize}from'hooks/useWindowDimensions';import{media}from'utils/media';import classes from'./style.module.scss';import{morphsData}from'data/morphs/data';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export function MorphMobile(){var _useState=useState(morphsData[0]),_useState2=_slicedToArray(_useState,2),morph=_useState2[0],setMorph=_useState2[1];var _useWindowSize=useWindowSize(),screenWidth=_useWindowSize.width;var morphChooseHandler=function morphChooseHandler(m){return setMorph(m);};var mapCards=morphsData.map(function(m){var isActive=m.id===morph.id&&classes.isActive;return/*#__PURE__*/_jsx(CardItem,{morph:m,onClick:function onClick(){return morphChooseHandler(m);},className:\"\".concat(classes.imgCard,\" \").concat(classes.cardNotActive,\" \").concat(isActive)},m.id);});var getIdxCard=morphsData.findIndex(function(m){return m.id===morph.id;});var left=function left(){var indexMorph=morphsData.findIndex(function(m){return m.id===morph.id;});// where 6 is a number last 6 cards that is visiable\nvar countMaxVisiableCardsInEnd=morphsData.length;if(screenWidth<=media.desktop)countMaxVisiableCardsInEnd=morphsData.length-9;if(screenWidth<=media.tablet)countMaxVisiableCardsInEnd=morphsData.length-7;if(screenWidth<=media.sTablet)countMaxVisiableCardsInEnd=morphsData.length-5;if(screenWidth<=media.lMobile)countMaxVisiableCardsInEnd=morphsData.length-5;if(screenWidth<=media.mMobile)countMaxVisiableCardsInEnd=morphsData.length-4;/**\n\t\t * width of img => 66;\n\t\t * 15 => gap of morphsCardsMobile;\n\t\t * 33 => half of img\n\t\t */var widthImg=66;var halfImg=widthImg/1.05;var gap=15;if(indexMorph>=countMaxVisiableCardsInEnd){var lastPosition=-(countMaxVisiableCardsInEnd*widthImg+gap*countMaxVisiableCardsInEnd)+halfImg;return lastPosition;}return-(getIdxCard*widthImg+gap*getIdxCard)+halfImg;};return/*#__PURE__*/_jsxs(\"div\",{className:classes.morphsContainerMobile,children:[/*#__PURE__*/_jsxs(\"div\",{className:classes.cardsWrapper,children:[/*#__PURE__*/_jsx(\"div\",{className:classes.shadowMorpMobile}),/*#__PURE__*/_jsxs(\"div\",{className:classes.morphsCardsMobile,style:{left:left()},children:[/*#__PURE__*/_jsx(CardItem,{morph:morphsData[morphsData.length-1],className:classes.imgCardNotActive}),mapCards]})]}),/*#__PURE__*/_jsx(InfoMorphMobile,{morph:morph}),/*#__PURE__*/_jsxs(\"div\",{className:classes.attrsTabletWrapper,children:[/*#__PURE__*/_jsx(BlockInfoTitle,{className:classes.infoTitleAttr,children:\"Attributes\"}),/*#__PURE__*/_jsx(AttrsDetails,{className:classes.attrMobileTablet,attributes:morph.attributes,type:morph.type})]})]});}","map":{"version":3,"names":["useState","CardItem","InfoMorphMobile","AttrsDetails","BlockInfoTitle","useWindowSize","media","classes","morphsData","MorphMobile","morph","setMorph","screenWidth","width","morphChooseHandler","m","mapCards","map","isActive","id","imgCard","cardNotActive","getIdxCard","findIndex","left","indexMorph","countMaxVisiableCardsInEnd","length","desktop","tablet","sTablet","lMobile","mMobile","widthImg","halfImg","gap","lastPosition","morphsContainerMobile","cardsWrapper","shadowMorpMobile","morphsCardsMobile","imgCardNotActive","attrsTabletWrapper","infoTitleAttr","attrMobileTablet","attributes","type"],"sources":["/srv/crypto/src/components/internal/YourMorph/mobileVersionYourMorph/MorphMobile/MorphMobile.jsx"],"sourcesContent":["import { useState } from 'react';\nimport {\n\tCardItem,\n\tInfoMorphMobile,\n\tAttrsDetails,\n\tBlockInfoTitle\n} from 'components';\nimport { useWindowSize } from 'hooks/useWindowDimensions';\nimport { media } from 'utils/media';\n\nimport classes from './style.module.scss';\nimport { morphsData } from 'data/morphs/data';\n\nexport function MorphMobile() {\n\tconst [morph, setMorph] = useState(morphsData[0]);\n\tconst { width: screenWidth } = useWindowSize();\n\n\tconst morphChooseHandler = m => setMorph(m);\n\n\tconst mapCards = morphsData.map(m => {\n\t\tconst isActive = m.id === morph.id && classes.isActive;\n\t\treturn (\n\t\t\t<CardItem\n\t\t\t\tkey={m.id}\n\t\t\t\tmorph={m}\n\t\t\t\tonClick={() => morphChooseHandler(m)}\n\t\t\t\tclassName={`${classes.imgCard} ${classes.cardNotActive} ${isActive}`}\n\t\t\t/>\n\t\t);\n\t});\n\n\tconst getIdxCard = morphsData.findIndex(m => m.id === morph.id);\n\n\tconst left = () => {\n\t\tconst indexMorph = morphsData.findIndex(m => m.id === morph.id);\n\n\t\t// where 6 is a number last 6 cards that is visiable\n\t\tlet countMaxVisiableCardsInEnd = morphsData.length;\n\t\tif (screenWidth <= media.desktop)\n\t\t\tcountMaxVisiableCardsInEnd = morphsData.length - 9;\n\t\tif (screenWidth <= media.tablet)\n\t\t\tcountMaxVisiableCardsInEnd = morphsData.length - 7;\n\t\tif (screenWidth <= media.sTablet)\n\t\t\tcountMaxVisiableCardsInEnd = morphsData.length - 5;\n\t\tif (screenWidth <= media.lMobile)\n\t\t\tcountMaxVisiableCardsInEnd = morphsData.length - 5;\n\t\tif (screenWidth <= media.mMobile)\n\t\t\tcountMaxVisiableCardsInEnd = morphsData.length - 4;\n\n\t\t/**\n\t\t * width of img => 66;\n\t\t * 15 => gap of morphsCardsMobile;\n\t\t * 33 => half of img\n\t\t */\n\t\tconst widthImg = 66;\n\t\tconst halfImg = widthImg / 1.05;\n\t\tconst gap = 15;\n\n\t\tif (indexMorph >= countMaxVisiableCardsInEnd) {\n\t\t\tconst lastPosition =\n\t\t\t\t-(\n\t\t\t\t\tcountMaxVisiableCardsInEnd * widthImg +\n\t\t\t\t\tgap * countMaxVisiableCardsInEnd\n\t\t\t\t) + halfImg;\n\t\t\treturn lastPosition;\n\t\t}\n\n\t\treturn -(getIdxCard * widthImg + gap * getIdxCard) + halfImg;\n\t};\n\n\n\treturn (\n\t\t<div className={classes.morphsContainerMobile}>\n\t\t\t<div className={classes.cardsWrapper}>\n\t\t\t\t<div className={classes.shadowMorpMobile} />\n        \n        <div\n          className={classes.morphsCardsMobile}\n          style={{ left: left() }}\n        >\n          <CardItem\n            morph={morphsData[morphsData.length - 1]}\n            className={classes.imgCardNotActive}\n          />\n          {mapCards}\n        </div>\n\t\t\t</div>\n\t\t\t<InfoMorphMobile morph={morph} />\n\n\t\t\t{/* will appear on table resolution */}\n\t\t\t<div className={classes.attrsTabletWrapper}>\n\t\t\t\t<BlockInfoTitle className={classes.infoTitleAttr}>\n\t\t\t\t\tAttributes\n\t\t\t\t</BlockInfoTitle>\n\t\t\t\t<AttrsDetails\n\t\t\t\t\tclassName={classes.attrMobileTablet}\n\t\t\t\t\tattributes={morph.attributes}\n          type={morph.type}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}